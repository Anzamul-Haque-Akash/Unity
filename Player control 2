using System.Collections;
using System.Collections.Generic;
using UnityEngine;

//Add Photon
using Photon.Pun;

public class PlayerController : MonoBehaviour
{

    //----------------------------------Variable Section------------------------------//

    [SerializeField] Transform playerCamera = null;

    [SerializeField] float rotateSpeed;

    [SerializeField] float walkSpeed;
    [SerializeField] float runningSpeed;

    [SerializeField] bool lockCursor = true;

    [SerializeField] float gravity;

    float cameraPitch = 0f;

    float velocityY = 0f;

    CharacterController controller = null;

    [SerializeField][Range(0.0f, 0.5f)] float moveSmoothTime = 0.3f;
    [SerializeField] [Range(0.0f, 0.5f)] float mouseSmoothTime = 0.03f;

    Vector2 currentDir = Vector2.zero;
    Vector2 currentDirVelocity = Vector2.zero;

    Vector2 currentMouseDelta = Vector2.zero;
    Vector2 currentMouseDeltaVelocity = Vector2.zero;

    // Start is called before the first frame update
    void Start()
    { 
        controller = GetComponent<CharacterController>();

        if (lockCursor)
        {
            Cursor.lockState = CursorLockMode.Locked;
            Cursor.visible = false;
        }

    }

    // Update is called once per frame
    void Update()
    {
        UpdateMouseLook();
        UpdateMovement();
    }

    //----------------------------------Update movement function------------------------------//
    void UpdateMovement() {

        Vector2 targetDir = new Vector2(Input.GetAxisRaw("Horizontal"), Input.GetAxisRaw("Vertical"));
        targetDir.Normalize();

        currentDir = Vector2.SmoothDamp(currentDir, targetDir, ref currentDirVelocity, moveSmoothTime);

        if (controller.isGrounded) {
            velocityY = 0f;
        }
        velocityY += gravity * Time.deltaTime;

        Vector3 velocity;

        if (Input.GetKey("left shift"))
        {
            velocity = (transform.forward * currentDir.y + transform.right * currentDir.x) * runningSpeed + Vector3.up * velocityY;
        }
        else
        {
            velocity = (transform.forward * currentDir.y + transform.right * currentDir.x) * walkSpeed + Vector3.up * velocityY;
        }

        controller.Move(velocity * Time.deltaTime);
    }

    //----------------------------------Update Mouselook function------------------------------//
    void UpdateMouseLook() {
        Vector2 targetMouseDelta = new Vector2(Input.GetAxis("Mouse X"), Input.GetAxis("Mouse Y"));

        currentMouseDelta = Vector2.SmoothDamp(currentMouseDelta, targetMouseDelta, ref currentMouseDeltaVelocity, mouseSmoothTime);

        cameraPitch -= currentMouseDelta.y * rotateSpeed;
        cameraPitch = Mathf.Clamp(cameraPitch, -90.0f, 90.0f);
        playerCamera.localEulerAngles = Vector3.right * cameraPitch;  

        transform.Rotate(Vector3.up * currentMouseDelta.x * rotateSpeed);
    }

}
